#------------------------------------------------------------------------------------------------
# 'options.cfg' is the default configuration file used by 'patch.sh'
# You can provide another configuration file as a parameter to 'patch.sh'
# All available patching options are listed below
# Disable patching an option by using '#' or ';' as a first character in the option line
# Use single or double quotes for the option value. Do not use spaces inside the quotes.
# Use list of values separated by a space if needed because duplicated option are not supported
# In square brackets you may place the name(s) of other option(s) required by a given option.
# This will not auto include the required option(s) but will be used to validate the option integrity.
#-------------------------------------------------------------------------------------------------

# Enable the custom updates by using the provided public key
# When enabled, the new custom update will allow next custom updates to be directly done by USB update
# @ will be replaced by the working folder root
# Use the provided example of public and private keys or generate your own:
# Use 'openssl genrsa -out swupdate_private.pem' to generate a private key
# Use 'openssl rsa -in swupdate_private.pem -out swupdate_public.pem -outform PEM -pubout' to export the public key
# Place both keys (swupdate_private.pem and swupdate_public.pem) in the folder RESOURCES/KEYS
# Available for all firmware versions (recommended)
custom_update="@/RESOURCES/KEYS/swupdate_public.pem"

# Enable root access by providing a custom root password hash (default password 'toor')
# Providing an empty string will allow root access without a password (not recommended)
# If disabled, you will have no root access until you find out what is the AC original root password
# Available for all firmware versions (recommended)
root_access="$1$///xTLYF$krWXTe62/dm.crd6CH4HW0"

# Enable the UART at boot for access the uboot shell and for root login
# UART access is needed for backup/restore and for root login when you don't have ssh
# Use "2.3.9" uboot from version '2.3.9' (recommended)
# From version 3.0.3 the UART is disabled
# Can be used for version 3.0.3 and above
uart="2.3.9"

# Enable opkg (+5MB to the update, +10MB to the rootfs)
# Use it only when you plan to install more packages from the printer
# Available for all firmware versions
opkg="default"

# Enable the SSH server, use 'dropbear' type ssh
# Available for all firmware versions (recommended)
ssh="dropbear"

# Set the authorized keys file for the ssh remote access with keys (instead of a password)
# Provide the file with your public key(s). You must have the private key set in your ssh client
# Available for all firmware versions (recommended)
# authorized_keys="@/RESOURCES/KEYS/authorized_keys" [ssh]

# Enable custom web server
# Use "webfs-v5" with default port 8000 or "webfs-v5:port" for a custom port
# "webfs-v5" uses static libraries with memory footprint less than 400kb (0.4% RAM), no dependencies
# Browse http://printer_ip:8000 to the home page of the custom webserver
# More web pages will be added soon
# Depends on the option "app_nocamera" only for versions 3.0.5+
# No dependency for versions below 3.0.5
# Available for versions 2.3.9 ... 3.1.0 (recommended)
# webserver="webfs-v5:8000" [app_nocamera]

# Enable Python 3 (+14MB to the update, +25MB to the rootfs)
# Select the version you need. Python might be required by some other options
# Available for all firmware versions
# python="3.11"

# Change the banner to a custom one. (Recommended when using custom firmware)
# Available for all firmware versions
banner="banner"

# Redirect the MQTT communication
# This option will disable the use of the original AC cloud service
# and the mobile app will stop working
# Can be used when a custom cloud service is needed.
# Example of a custom cloud service with web interface is Kobra Unleashed
# More information: https://github.com/anjomro/kobra-unleashed
# Replace the URL below with the URL of your MQTT server
# You also need to transfer to the printer your keys in
# the /user folder by ssh as explained in the project page
# Always keep a copy of the original keys in case you want to go back to AC cloud
# Available for all firmware versions
modify_mqtt="localhost.mr-a.de"
# localhost.mr-a.de will just redirect the MQTT to the localhost 127.0.0.1 to be used with a local MQTT server

# Delete the Bluetooth support because it's not used by Kobra Unleashed
# and can't be used since we replace mqtt anyways
# Available for versions 3.0.5+
bluetooth="default"

# Patch the app to check the captive portal URLs less often (originally every 2s)
# It is used to detect if the internet connection is established and alive
# This patch will produce less unwanted web traffic if enabled
# Available settings are: 5s, 10s, 20s, 30s and 60s
# Available for versions 3.0.5+
app_net_ready="30s"

# Modify the hardcoded app DNS
# For parameter(s) provide "old_dns|new_dns"
# Available hardcoded DNS in the app:
# "8.8.8.8", "208.67.222.222", "114.114.114.114", "223.5.5.5"
# You can replace one, more or all of them
# Example: app_dns="208.67.222.222|4.4.4.4" "223.5.5.5|8.8.4.4"
app_dns="208.67.222.222|1.1.1.1"

# Patch the app to stop supporting webcams. This allows a custom camera support
# Available for versions 3.0.5+ (recommended if webcam is used)
# app_nocamera="default"

# Add a script for custom initializations at startup
# like starting a custom MQTT server, webcam steaming, etc.
# Place startup scripts inside this script.
startup_script="startup.sh"

# Enable kobra unleashed prod version test
# https://github.com/anjomro/kobra-unleashed/tree/go-server
kobra_unleashed="kobra_unleashed-v1"
